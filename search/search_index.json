{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"projeto cloud 2024.2 por bruno zalcberg essa \u00e9 uma documenta\u00e7\u00e3o simples para o projeto da disciplina de Computa\u00e7\u00e3o em Nuvem a ideia central do trabalho \u00e9 o desenvolvimento de uma API simples e sua posterior integra\u00e7\u00e3o com o docker \ud83d\udc33 e a AWS \u2601\ufe0f voc\u00ea pode usar o menu lateral ou os bot\u00f5es no footer para navegar pelas p\u00e1ginas links \u00fateis: github docker hub","title":"home"},{"location":"#projeto-cloud-20242","text":"","title":"projeto cloud 2024.2"},{"location":"#por-bruno-zalcberg","text":"essa \u00e9 uma documenta\u00e7\u00e3o simples para o projeto da disciplina de Computa\u00e7\u00e3o em Nuvem a ideia central do trabalho \u00e9 o desenvolvimento de uma API simples e sua posterior integra\u00e7\u00e3o com o docker \ud83d\udc33 e a AWS \u2601\ufe0f voc\u00ea pode usar o menu lateral ou os bot\u00f5es no footer para navegar pelas p\u00e1ginas","title":"por bruno zalcberg"},{"location":"#links-uteis","text":"github docker hub","title":"links \u00fateis:"},{"location":"aws/aws/","text":"","title":"vis\u00e3o geral"},{"location":"docker/api/","text":"API a API \u00e9 muito simples, e possui apenas tr\u00eas endpoints . a ideia \u00e9 que, ao final, voc\u00ea consiga us\u00e1-la para ver tr\u00eas fatos aleat\u00f3rios sobre cachorros, quando quiser! \ud83d\udc36 o servi\u00e7o tem um sistema de autentica\u00e7\u00e3o, baseado em json web tokens (jwt) . para que sua requisi\u00e7\u00e3o GET seja aceita, voc\u00ea precisa fornecer um token v\u00e1lido 1. endpoint de registro url: /registrar m\u00e9todo aceito: POST exemplo de requisi\u00e7\u00e3o: { \"name\": \"string\", \"email\": \"user@string.com\", \"password\": \"string\" } exemplo de resposta: { \"access_token\": \"seu_token_jwt\", \"token_type\": \"bearer\" } 2. endpoint de login url: /login m\u00e9todo aceito: POST exemplo de requisi\u00e7\u00e3o: { \"name\": \"string\", \"password\": \"string\" } exemplo de resposta: { \"access_token\": \"seu_token_jwt\", \"token_type\": \"bearer\" } 3. endpoint de consulta a fatos caninos url: /consulta m\u00e9todo aceito: GET exemplo de requisi\u00e7\u00e3o (com token): curl -X 'GET' \\ 'http://localhost:8000/consultar' \\ -H 'accept: application/json' \\ -H 'Authorization: seu_token_jwt' exemplo de resposta: { \"facts\": [ \"fato canino 1\", \"fato canino 2\", \"fato canino 3\" ] } caso voc\u00ea esteja testando a API atrav\u00e9s da documenta\u00e7\u00e3o interativa, \u00e9 necess\u00e1rio que voc\u00ea: copie o token gerado por alguma das requisi\u00e7\u00f5es anteriores aperte o bot\u00e3o \"Authorize\", localizado no canto superior direito da p\u00e1gina insira seu token e fa\u00e7a login","title":"API"},{"location":"docker/api/#api","text":"a API \u00e9 muito simples, e possui apenas tr\u00eas endpoints . a ideia \u00e9 que, ao final, voc\u00ea consiga us\u00e1-la para ver tr\u00eas fatos aleat\u00f3rios sobre cachorros, quando quiser! \ud83d\udc36 o servi\u00e7o tem um sistema de autentica\u00e7\u00e3o, baseado em json web tokens (jwt) . para que sua requisi\u00e7\u00e3o GET seja aceita, voc\u00ea precisa fornecer um token v\u00e1lido","title":"API"},{"location":"docker/api/#1-endpoint-de-registro","text":"url: /registrar m\u00e9todo aceito: POST exemplo de requisi\u00e7\u00e3o: { \"name\": \"string\", \"email\": \"user@string.com\", \"password\": \"string\" } exemplo de resposta: { \"access_token\": \"seu_token_jwt\", \"token_type\": \"bearer\" }","title":"1. endpoint de registro"},{"location":"docker/api/#2-endpoint-de-login","text":"url: /login m\u00e9todo aceito: POST exemplo de requisi\u00e7\u00e3o: { \"name\": \"string\", \"password\": \"string\" } exemplo de resposta: { \"access_token\": \"seu_token_jwt\", \"token_type\": \"bearer\" }","title":"2. endpoint de login"},{"location":"docker/api/#3-endpoint-de-consulta-a-fatos-caninos","text":"url: /consulta m\u00e9todo aceito: GET exemplo de requisi\u00e7\u00e3o (com token): curl -X 'GET' \\ 'http://localhost:8000/consultar' \\ -H 'accept: application/json' \\ -H 'Authorization: seu_token_jwt' exemplo de resposta: { \"facts\": [ \"fato canino 1\", \"fato canino 2\", \"fato canino 3\" ] } caso voc\u00ea esteja testando a API atrav\u00e9s da documenta\u00e7\u00e3o interativa, \u00e9 necess\u00e1rio que voc\u00ea: copie o token gerado por alguma das requisi\u00e7\u00f5es anteriores aperte o bot\u00e3o \"Authorize\", localizado no canto superior direito da p\u00e1gina insira seu token e fa\u00e7a login","title":"3. endpoint de consulta a fatos caninos"},{"location":"docker/uso/","text":"instala\u00e7\u00e3o e uso do cont\u00e2iner a aplica\u00e7\u00e3o pode ser rodada facilmente atrav\u00e9s da interface do Docker e do DockerHub. pr\u00e9-requisitos para rodar o projeto, voc\u00ea ir\u00e1 precisar de: docker e docker compose instalados na sua m\u00e1quina o arquivo compose.yml git (opcional) instala\u00e7\u00e3o baixe o arquivo compose.yml : compose.yml document.addEventListener(\"DOMContentLoaded\", function() { document.getElementById('downloadLink').addEventListener('click', function(event) { event.preventDefault(); const url = this.href; const fileName = 'compose.yml'; fetch(url) .then(response => response.blob()) .then(blob => { const link = document.createElement('a'); link.href = window.URL.createObjectURL(blob); link.download = fileName; link.click(); window.URL.revokeObjectURL(link.href); }) .catch(() => alert('Falha ao baixar o arquivo.')); }); }); ou clone o reposit\u00f3rio do projeto no seu computador: git clone https://github.com/brunozalc/projeto-cloud.git uso abra um terminal ou prompt de comando no mesmo local em que voc\u00ea armazenou o compose.yml ou o reposit\u00f3rio, e inicie a API: docker compose up espere alguns segundos, e a API ficar\u00e1 dispon\u00edvel em http://localhost:8080 voc\u00ea pode ver a documenta\u00e7\u00e3o dos endpoints da API em http://localhost:8080/docs , al\u00e9m de test\u00e1-los interativamente!","title":"download e uso"},{"location":"docker/uso/#instalacao-e-uso-do-container","text":"a aplica\u00e7\u00e3o pode ser rodada facilmente atrav\u00e9s da interface do Docker e do DockerHub.","title":"instala\u00e7\u00e3o e uso do cont\u00e2iner"},{"location":"docker/uso/#pre-requisitos","text":"para rodar o projeto, voc\u00ea ir\u00e1 precisar de: docker e docker compose instalados na sua m\u00e1quina o arquivo compose.yml git (opcional)","title":"pr\u00e9-requisitos"},{"location":"docker/uso/#instalacao","text":"baixe o arquivo compose.yml : compose.yml document.addEventListener(\"DOMContentLoaded\", function() { document.getElementById('downloadLink').addEventListener('click', function(event) { event.preventDefault(); const url = this.href; const fileName = 'compose.yml'; fetch(url) .then(response => response.blob()) .then(blob => { const link = document.createElement('a'); link.href = window.URL.createObjectURL(blob); link.download = fileName; link.click(); window.URL.revokeObjectURL(link.href); }) .catch(() => alert('Falha ao baixar o arquivo.')); }); }); ou clone o reposit\u00f3rio do projeto no seu computador: git clone https://github.com/brunozalc/projeto-cloud.git","title":"instala\u00e7\u00e3o"},{"location":"docker/uso/#uso","text":"abra um terminal ou prompt de comando no mesmo local em que voc\u00ea armazenou o compose.yml ou o reposit\u00f3rio, e inicie a API: docker compose up espere alguns segundos, e a API ficar\u00e1 dispon\u00edvel em http://localhost:8080 voc\u00ea pode ver a documenta\u00e7\u00e3o dos endpoints da API em http://localhost:8080/docs , al\u00e9m de test\u00e1-los interativamente!","title":"uso"}]}